{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MoviesList.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport NewMovie from './NewMovie';\nimport Movie from './Movie';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nowPlayingMovies: [],\n      nowPlayingPage: 1,\n      popularMovies: []\n    };\n\n    this.changePage = function (pageValue) {\n      if (pageValue === 'next') {\n        if (this.state.nowPlayingPage < 5) {\n          this.setState(prevState => ({\n            nowPlayingPage: prevState.nowPlayingPage + 1\n          }));\n        } else if (this.state.nowPlayingPage === 5) {\n          this.setState({\n            nowPlayingPage: 1\n          });\n        }\n      } else if (pageValue === 'prev') {\n        if (this.state.nowPlayingPage > 1) {\n          this.setState(prevState => ({\n            nowPlayingPage: prevState.nowPlayingPage - 1\n          }));\n        } else if (this.state.nowPlayingPage === 1) {\n          this.setState({\n            nowPlayingPage: 5\n          });\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      nowPlayingPage\n    } = this.state;\n\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      const popular = await fetch(`${'https://api.themoviedb.org/3/trending/movie/day?api_key=e223c8dda88d58c4a35436bfed991d9d'}`);\n      const popularMovies = await popular.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results,\n        popularMovies: popularMovies.results\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  async componentDidUpdate() {\n    const {\n      nowPlayingPage\n    } = this.state;\n\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  render() {\n    const {\n      nowPlayingMovies,\n      nowPlayingPage,\n      popularMovies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"New Movies\"), /*#__PURE__*/React.createElement(NewMovieGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, nowPlayingMovies.map(movie => /*#__PURE__*/React.createElement(NewMovie, {\n      key: movie.id,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PageControl, {\n      onClick: () => this.changePage('prev'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Prev\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, `Page ${nowPlayingPage} of 5`), /*#__PURE__*/React.createElement(PageControl, {\n      onClick: () => this.changePage('next'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Popular Movies\"), /*#__PURE__*/React.createElement(MovieGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, popularMovies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default MoviesList;\nconst NewMovieGrid = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 20px;\n    margin-bottom: 20px;\n`;\nconst MovieGrid = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-gap: 20px;\n`;\nconst PageControl = styled.button`\n    background-color: transparent;\n    margin: 0 10px;\n    font-size: 16px;\n    margin-bottom: 20px;\n    transition: all 0.3s ease-in-out;\n    border: 2px solid white;\n    border-radius: 5px;\n    padding: 2px 6px;\n    :hover {\n        cursor: pointer;\n        color: coral;\n        border-color: coral;\n    }\n`;","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MoviesList.js"],"names":["React","Component","styled","NewMovie","Movie","MoviesList","state","nowPlayingMovies","nowPlayingPage","popularMovies","changePage","pageValue","setState","prevState","componentDidMount","nowPlaying","fetch","json","popular","results","error","componentDidUpdate","render","map","movie","id","NewMovieGrid","div","MovieGrid","PageControl","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport NewMovie from './NewMovie';\nimport Movie from './Movie';\n\nclass MoviesList extends Component {\n    state = {\n        nowPlayingMovies: [],\n        nowPlayingPage: 1,\n        popularMovies: [],\n    };\n\n    async componentDidMount() {\n        const { nowPlayingPage } = this.state;\n        try {\n            const nowPlaying = await fetch(\n                `${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`\n            );\n            const nowPlayingMovies = await nowPlaying.json();\n            const popular = await fetch(\n                `${'https://api.themoviedb.org/3/trending/movie/day?api_key=e223c8dda88d58c4a35436bfed991d9d'}`\n            );\n            const popularMovies = await popular.json();\n            this.setState({\n                nowPlayingMovies: nowPlayingMovies.results,\n                popularMovies: popularMovies.results,\n            });\n        } catch (error) {\n            // continue\n        }\n    }\n\n    async componentDidUpdate() {\n        const { nowPlayingPage } = this.state;\n        try {\n            const nowPlaying = await fetch(\n                `${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`\n            );\n            const nowPlayingMovies = await nowPlaying.json();\n            this.setState({\n                nowPlayingMovies: nowPlayingMovies.results,\n            });\n        } catch (error) {\n            // continue\n        }\n    }\n\n    changePage = function (pageValue) {\n        if (pageValue === 'next') {\n            if (this.state.nowPlayingPage < 5) {\n                this.setState((prevState) => ({\n                    nowPlayingPage: prevState.nowPlayingPage + 1,\n                }));\n            } else if (this.state.nowPlayingPage === 5) {\n                this.setState({\n                    nowPlayingPage: 1,\n                });\n            }\n        } else if (pageValue === 'prev') {\n            if (this.state.nowPlayingPage > 1) {\n                this.setState((prevState) => ({\n                    nowPlayingPage: prevState.nowPlayingPage - 1,\n                }));\n            } else if (this.state.nowPlayingPage === 1) {\n                this.setState({\n                    nowPlayingPage: 5,\n                });\n            }\n        }\n    };\n\n    render() {\n        const { nowPlayingMovies, nowPlayingPage, popularMovies } = this.state;\n        return (\n            <div>\n                <h1>New Movies</h1>\n                <NewMovieGrid>\n                    {nowPlayingMovies.map((movie) => (\n                        <NewMovie key={movie.id} movie={movie} />\n                    ))}\n                </NewMovieGrid>\n                <div>\n                    <PageControl onClick={() => this.changePage('prev')}>\n                        Prev\n                    </PageControl>\n                    <span>{`Page ${nowPlayingPage} of 5`}</span>\n                    <PageControl onClick={() => this.changePage('next')}>\n                        Next\n                    </PageControl>\n                </div>\n                <h1>Popular Movies</h1>\n                <MovieGrid>\n                    {popularMovies.map((movie) => (\n                        <Movie key={movie.id} movie={movie} />\n                    ))}\n                </MovieGrid>\n            </div>\n        );\n    }\n}\n\nexport default MoviesList;\n\nconst NewMovieGrid = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 20px;\n    margin-bottom: 20px;\n`;\n\nconst MovieGrid = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-gap: 20px;\n`;\nconst PageControl = styled.button`\n    background-color: transparent;\n    margin: 0 10px;\n    font-size: 16px;\n    margin-bottom: 20px;\n    transition: all 0.3s ease-in-out;\n    border: 2px solid white;\n    border-radius: 5px;\n    padding: 2px 6px;\n    :hover {\n        cursor: pointer;\n        color: coral;\n        border-color: coral;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}