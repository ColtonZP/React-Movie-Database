{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MoviesList.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport NewMovie from './NewMovie';\nimport Movie from './Movie';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nowPlayingMovies: [],\n      nowPlayingPage: 1,\n      popularMovies: []\n    };\n\n    this.changePage = function (pageValue) {\n      if (pageValue === 'next') {\n        if (this.state.nowPlayingPage < 5) {\n          this.setState(prevState => ({\n            nowPlayingPage: prevState.nowPlayingPage + 1\n          }));\n        } else if (this.state.nowPlayingPage === 5) {\n          this.setState({\n            nowPlayingPage: 1\n          });\n        }\n      } else if (pageValue === 'prev') {\n        if (this.state.nowPlayingPage > 1) {\n          this.setState(prevState => ({\n            nowPlayingPage: prevState.nowPlayingPage - 1\n          }));\n        } else if (this.state.nowPlayingPage === 1) {\n          this.setState({\n            nowPlayingPage: 3\n          });\n        }\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      nowPlayingPage\n    } = this.state;\n\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      const popular = await fetch(`${'https://api.themoviedb.org/3/trending/movie/day?api_key=e223c8dda88d58c4a35436bfed991d9d'}`);\n      const popularMovies = await popular.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results,\n        popularMovies: popularMovies.results\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  async componentDidUpdate() {\n    const {\n      nowPlayingPage\n    } = this.state;\n\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  render() {\n    const {\n      nowPlayingMovies,\n      nowPlayingPage,\n      popularMovies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Now Playing:\"), /*#__PURE__*/React.createElement(NewMovieGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, nowPlayingMovies.map(movie => /*#__PURE__*/React.createElement(NewMovie, {\n      key: movie.id,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 44\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PageControl, {\n      onClick: () => this.changePage('prev'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Prev\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, `Page ${nowPlayingPage} of 3`), /*#__PURE__*/React.createElement(PageControl, {\n      onClick: () => this.changePage('next'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"On The Rise\"), /*#__PURE__*/React.createElement(MovieGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, popularMovies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }))));\n  }\n\n}\n\nexport default MoviesList;\nconst NewMovieGrid = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nconst MovieGrid = styled.div`\n  display: grid;\n  padding: 1rem;\n  grid-template-columns: repeat(5, 1fr);\n  grid-row-gap: 1rem;\n`;\nconst PageControl = styled.button`\n  background-color: transparent;\n  margin: 0 10px;\n  font-size: 16px;\n  transition: all .3s ease-in-out;\n  :hover {\n    cursor: pointer;\n    color: coral;\n    border-color: coral;\n  }\n`;","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MoviesList.js"],"names":["React","Component","styled","NewMovie","Movie","MoviesList","state","nowPlayingMovies","nowPlayingPage","popularMovies","changePage","pageValue","setState","prevState","componentDidMount","nowPlaying","fetch","json","popular","results","error","componentDidUpdate","render","map","movie","id","NewMovieGrid","div","MovieGrid","PageControl","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport NewMovie from './NewMovie';\nimport Movie from './Movie';\n\nclass MoviesList extends Component {\n  state = {\n    nowPlayingMovies: [],\n    nowPlayingPage: 1,\n    popularMovies: [],\n  }\n\n  async componentDidMount() {\n    const { nowPlayingPage } = this.state;\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      const popular = await fetch(`${'https://api.themoviedb.org/3/trending/movie/day?api_key=e223c8dda88d58c4a35436bfed991d9d'}`);\n      const popularMovies = await popular.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results,\n        popularMovies: popularMovies.results,\n      });\n    } catch (error) {\n      // continue\n    }\n  }\n\n  async componentDidUpdate() {\n    const { nowPlayingPage } = this.state;\n    try {\n      const nowPlaying = await fetch(`${'https://api.themoviedb.org/3/movie/now_playing?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US&region=US&sort_by=release_date.desc&include_adult=false&page='}${nowPlayingPage}`);\n      const nowPlayingMovies = await nowPlaying.json();\n      this.setState({\n        nowPlayingMovies: nowPlayingMovies.results,\n      });\n    } catch (error) {\n      // continue\n    }\n  }\n\n  changePage = function (pageValue) {\n    if (pageValue === 'next') {\n      if (this.state.nowPlayingPage < 5) {\n        this.setState((prevState) => ({ nowPlayingPage: prevState.nowPlayingPage + 1 }));\n      } else if (this.state.nowPlayingPage === 5) {\n        this.setState({\n          nowPlayingPage: 1,\n        });\n      }\n    } else if (pageValue === 'prev') {\n      if (this.state.nowPlayingPage > 1) {\n        this.setState((prevState) => ({ nowPlayingPage: prevState.nowPlayingPage - 1 }));\n      } else if (this.state.nowPlayingPage === 1) {\n        this.setState({\n          nowPlayingPage: 3,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { nowPlayingMovies, nowPlayingPage, popularMovies } = this.state;\n    return (\n      <div>\n        <h1>Now Playing:</h1>\n        <NewMovieGrid>\n          {nowPlayingMovies.map((movie) => <NewMovie key={movie.id} movie={movie} />)}\n        </NewMovieGrid>\n        <div>\n          <PageControl onClick={() => this.changePage('prev')}>Prev</PageControl>\n          <span>{`Page ${nowPlayingPage} of 3`}</span>\n          <PageControl onClick={() => this.changePage('next')}>Next</PageControl>\n        </div>\n        <h1>On The Rise</h1>\n        <MovieGrid>\n          {popularMovies.map((movie) => <Movie key={movie.id} movie={movie} />)}\n        </MovieGrid>\n      </div>\n    );\n  }\n}\n\nexport default MoviesList;\n\nconst NewMovieGrid = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst MovieGrid = styled.div`\n  display: grid;\n  padding: 1rem;\n  grid-template-columns: repeat(5, 1fr);\n  grid-row-gap: 1rem;\n`;\nconst PageControl = styled.button`\n  background-color: transparent;\n  margin: 0 10px;\n  font-size: 16px;\n  transition: all .3s ease-in-out;\n  :hover {\n    cursor: pointer;\n    color: coral;\n    border-color: coral;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}