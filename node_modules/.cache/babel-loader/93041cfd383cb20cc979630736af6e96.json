{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MovieDetail.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nconst W154_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/original';\n\nclass MovieDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {},\n      movieCast: [],\n      similarMovies: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n\n    try {\n      const movieFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movieCreditsFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const similarMoviesFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movie = await movieFetch.json();\n      let movieCast = await movieCreditsFetch.json();\n      movieCast = movieCast.cast.slice(0, 6);\n      let similarMovies = await similarMoviesFetch.json();\n      similarMovies = similarMovies.results.slice(0, 6);\n      this.setState({\n        movie,\n        movieCast,\n        similarMovies\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  render() {\n    const {\n      movie,\n      movieCast,\n      similarMovies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MovieWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MovieBackdrop, {\n      backdrop: `${BACKDROP_PATH}${movie.backdrop_path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${W154_PATH}${movie.poster_path}`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, movie.title), /*#__PURE__*/React.createElement(Rating, {\n      rating: movie.vote_average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, movie.vote_average * 10, \"% Viewer Rating\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, movie.release_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, movie.overview))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Cast\"), /*#__PURE__*/React.createElement(Cast, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, movieCast.map(cast => /*#__PURE__*/React.createElement(\"div\", {\n      key: cast.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${W154_PATH}${cast.profile_path}`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, cast.character), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Played by:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, cast.name)))), similarMovies.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Related movies\") : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"No similar movies found\"), /*#__PURE__*/React.createElement(Similar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, similarMovies.map(cast => /*#__PURE__*/React.createElement(Movie, {\n      key: cast.id,\n      movie: cast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nMovieDetail.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetail;\nconst MovieBackdrop = styled.div`\n    width: 100vw;\n    height: 50vh;\n    background: url(${props => props.backdrop}) no-repeat top/cover;\n`;\nconst MovieWrapper = styled.div`\n    position: relative;\n`;\nconst Cast = styled.div`\n    padding: 10px 0;\n    display: flex;\n    flex-wrap: wrap;\n    width: 80%;\n    margin: 0 auto;\n    justify-content: space-between;\n    > div {\n        width: 30%;\n        > img {\n            float: left;\n            margin-right: 10px;\n            margin-bottom: 10px;\n        }\n        > span {\n            margin: auto;\n            display: block;\n            text-align: left;\n        }\n    }\n`;\nconst Similar = styled.div`\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    width: 80%;\n    grid-gap: calc(100%/12)\n`;\nconst MovieInfo = styled.div`\n    background: #222;\n    text-align: left;\n    padding: 0 10%;\n    display: flex;\n    box-shadow: 0 -15px 15px 0px black;\n    > div {\n        margin-left: 20px;\n    }\n    > img {\n        position: relative;\n        top: -5rem;\n    }\n`;\nconst Rating = styled.span`\n    position: relative;\n    ::before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 5px;\n        top: -5px;\n        background: #a00;\n    }\n    &:after {\n        content: '';\n        position: absolute;\n        width: ${props => props.rating * 10}%;\n        height: 5px;\n        top: -5px;\n        left: 0;\n        background: #2bc400;\n        box-shadow: 0px 0px 5px #2bc400;\n    }\n`;","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MovieDetail.js"],"names":["React","Component","PropTypes","styled","Movie","W154_PATH","BACKDROP_PATH","MovieDetail","state","movie","movieCast","similarMovies","componentDidMount","match","props","movieFetch","fetch","params","id","movieCreditsFetch","similarMoviesFetch","json","cast","slice","results","setState","error","render","backdrop_path","poster_path","title","vote_average","release_date","overview","map","profile_path","character","name","length","propTypes","shape","string","isRequired","MovieBackdrop","div","backdrop","MovieWrapper","Cast","Similar","MovieInfo","Rating","span","rating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Movie from './Movie';\n\nconst W154_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/original';\n\nclass MovieDetail extends Component {\n    state = {\n        movie: {},\n        movieCast: [],\n        similarMovies: [],\n    };\n\n    async componentDidMount() {\n        const { match } = this.props;\n        try {\n            const movieFetch = await fetch(\n                `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`\n            );\n            const movieCreditsFetch = await fetch(\n                `https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`\n            );\n            const similarMoviesFetch = await fetch(\n                `https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`\n            );\n            const movie = await movieFetch.json();\n            let movieCast = await movieCreditsFetch.json();\n            movieCast = movieCast.cast.slice(0, 6);\n            let similarMovies = await similarMoviesFetch.json();\n            similarMovies = similarMovies.results.slice(0, 6);\n            this.setState({\n                movie,\n                movieCast,\n                similarMovies,\n            });\n        } catch (error) {\n            // continue\n        }\n    }\n\n    render() {\n        const { movie, movieCast, similarMovies } = this.state;\n        return (\n            <MovieWrapper>\n                <MovieBackdrop\n                    backdrop={`${BACKDROP_PATH}${movie.backdrop_path}`}\n                />\n                <MovieInfo>\n                    <img src={`${W154_PATH}${movie.poster_path}`} alt=\"\" />\n                    <div>\n                        <h1>{movie.title}</h1>\n                        <Rating rating={movie.vote_average}>\n                            {movie.vote_average * 10}% Viewer Rating\n                        </Rating>\n                        <h3>{movie.release_date}</h3>\n                        <p>{movie.overview}</p>\n                    </div>\n                </MovieInfo>\n                <h2>Cast</h2>\n                <Cast>\n                    {movieCast.map((cast) => (\n                        <div key={cast.id}>\n                            <img\n                                src={`${W154_PATH}${cast.profile_path}`}\n                                alt=\"\"\n                            />\n                            <span>{cast.character}</span>\n                            <br />\n                            <span>Played by:</span>\n                            <span>{cast.name}</span>\n                        </div>\n                    ))}\n                </Cast>\n                {similarMovies.length > 0 ? (\n                    <h2>Related movies</h2>\n                ) : (\n                    <h2>No similar movies found</h2>\n                )}\n                <Similar>\n                    {similarMovies.map((cast) => (\n                        <Movie key={cast.id} movie={cast} />\n                    ))}\n                </Similar>\n            </MovieWrapper>\n        );\n    }\n}\n\nMovieDetail.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default MovieDetail;\n\nconst MovieBackdrop = styled.div`\n    width: 100vw;\n    height: 50vh;\n    background: url(${(props) => props.backdrop}) no-repeat top/cover;\n`;\n\nconst MovieWrapper = styled.div`\n    position: relative;\n`;\n\nconst Cast = styled.div`\n    padding: 10px 0;\n    display: flex;\n    flex-wrap: wrap;\n    width: 80%;\n    margin: 0 auto;\n    justify-content: space-between;\n    > div {\n        width: 30%;\n        > img {\n            float: left;\n            margin-right: 10px;\n            margin-bottom: 10px;\n        }\n        > span {\n            margin: auto;\n            display: block;\n            text-align: left;\n        }\n    }\n`;\n\nconst Similar = styled.div`\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    width: 80%;\n    grid-gap: calc(100%/12)\n`;\n\nconst MovieInfo = styled.div`\n    background: #222;\n    text-align: left;\n    padding: 0 10%;\n    display: flex;\n    box-shadow: 0 -15px 15px 0px black;\n    > div {\n        margin-left: 20px;\n    }\n    > img {\n        position: relative;\n        top: -5rem;\n    }\n`;\n\nconst Rating = styled.span`\n    position: relative;\n    ::before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 5px;\n        top: -5px;\n        background: #a00;\n    }\n    &:after {\n        content: '';\n        position: absolute;\n        width: ${(props) => props.rating * 10}%;\n        height: 5px;\n        top: -5px;\n        left: 0;\n        background: #2bc400;\n        box-shadow: 0px 0px 5px #2bc400;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}