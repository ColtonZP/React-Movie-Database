{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MovieDetail.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nconst W154_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/original';\n\nclass MovieDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {},\n      movieCast: [],\n      similarMovies: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n\n    try {\n      const movieFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movieCreditsFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const similarMoviesFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movie = await movieFetch.json();\n      let movieCast = await movieCreditsFetch.json();\n      movieCast = movieCast.cast.slice(0, 6);\n      let similarMovies = await similarMoviesFetch.json();\n      similarMovies = similarMovies.results.slice(0, 6);\n      this.setState({\n        movie,\n        movieCast,\n        similarMovies\n      });\n    } catch (error) {// continue\n    }\n  }\n\n  render() {\n    const {\n      movie,\n      movieCast,\n      similarMovies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MovieWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieBackdrop, {\n      backdrop: `${BACKDROP_PATH}${movie.backdrop_path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${W154_PATH}${movie.poster_path}`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, movie.title), /*#__PURE__*/React.createElement(Rating, {\n      rating: movie.vote_average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, movie.vote_average * 10, \"% Viewer Rating\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, movie.release_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, movie.overview))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Cast\"), /*#__PURE__*/React.createElement(Cast, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, movieCast.map(cast => /*#__PURE__*/React.createElement(\"div\", {\n      key: cast.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${W154_PATH}${cast.profile_path}`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, cast.character), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Played by:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, cast.name)))), similarMovies.length > 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 39\n      }\n    }, \"Related movies\") : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 65\n      }\n    }, \"No similar movies found\"), /*#__PURE__*/React.createElement(Similar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, similarMovies.map(cast => /*#__PURE__*/React.createElement(Movie, {\n      key: cast.id,\n      movie: cast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }\n    }))));\n  }\n\n}\n\nMovieDetail.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetail;\nconst MovieBackdrop = styled.div`\nwidth: 100vw;\nheight: 50vh;\nbackground: url(${props => props.backdrop}) no-repeat top/cover;\n`;\nconst MovieWrapper = styled.div`\n  position: relative;\n  \n`;\nconst Cast = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: 0 auto;\n  justify-content: space-between;\n  > div {\n    width: 30%;\n    > img {\n      float: left;\n      margin-right: 10px;\n      margin-bottom: 10px;\n    }\n    > span {\n      margin: auto;\n      display: block;\n      text-align: left;\n    }\n  }\n`;\nconst Similar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: 0 auto;\n  justify-content: space-between;\n  > a {\n    width: 30%;\n    margin-bottom: 10px;\n    > img {\n      float: left;\n      margin-right: 10px;\n    }\n    > span {\n      text-align: left;\n    }\n  }\n`;\nconst MovieInfo = styled.div`\n  background: #222;\n  text-align: left;\n  padding: 0 10%;\n  display: flex;\n  box-shadow: 0 -15px 15px 0px black;\n  > div {\n    margin-left: 20px;\n  }\n  > img {\n    position: relative;\n    top: -5rem;\n  }\n`;\nconst Rating = styled.span`\nposition: relative;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 5px;\n    top: -5px;\n    background: #a00;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    width: ${props => props.rating * 10}%;\n    height: 5px;\n    top: -5px;\n    left: 0;\n    background: #2bc400;\n    box-shadow: 0px 0px 5px #2bc400;\n  }\n`;","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/react-movie-database/src/MovieDetail.js"],"names":["React","Component","PropTypes","styled","Movie","W154_PATH","BACKDROP_PATH","MovieDetail","state","movie","movieCast","similarMovies","componentDidMount","match","props","movieFetch","fetch","params","id","movieCreditsFetch","similarMoviesFetch","json","cast","slice","results","setState","error","render","backdrop_path","poster_path","title","vote_average","release_date","overview","map","profile_path","character","name","length","propTypes","shape","string","isRequired","MovieBackdrop","div","backdrop","MovieWrapper","Cast","Similar","MovieInfo","Rating","span","rating"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAG,gCAAlB;AACA,MAAMC,aAAa,GAAG,oCAAtB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCO,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,aAAa,EAAE;AAHT,KAD0B;AAAA;;AAOlC,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;;AACA,QAAI;AACF,YAAMC,UAAU,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,KAAK,CAACI,MAAN,CAAaC,EAAG,0DAAvD,CAA9B;AACA,YAAMC,iBAAiB,GAAG,MAAMH,KAAK,CAAE,sCAAqCH,KAAK,CAACI,MAAN,CAAaC,EAAG,kEAAvD,CAArC;AACA,YAAME,kBAAkB,GAAG,MAAMJ,KAAK,CAAE,sCAAqCH,KAAK,CAACI,MAAN,CAAaC,EAAG,kEAAvD,CAAtC;AACA,YAAMT,KAAK,GAAG,MAAMM,UAAU,CAACM,IAAX,EAApB;AACA,UAAIX,SAAS,GAAG,MAAMS,iBAAiB,CAACE,IAAlB,EAAtB;AACAX,MAAAA,SAAS,GAAGA,SAAS,CAACY,IAAV,CAAeC,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAZ;AACA,UAAIZ,aAAa,GAAG,MAAMS,kBAAkB,CAACC,IAAnB,EAA1B;AACAV,MAAAA,aAAa,GAAGA,aAAa,CAACa,OAAd,CAAsBD,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAhB;AACA,WAAKE,QAAL,CAAc;AACZhB,QAAAA,KADY;AAEZC,QAAAA,SAFY;AAGZC,QAAAA;AAHY,OAAd;AAKD,KAdD,CAcE,OAAOe,KAAP,EAAc,CACd;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAAsC,KAAKH,KAAjD;AACA,wBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAG,GAAEF,aAAc,GAAEG,KAAK,CAACmB,aAAc,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAG,GAAEvB,SAAU,GAAEI,KAAK,CAACoB,WAAY,EAA3C;AAA8C,MAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKpB,KAAK,CAACqB,KAAX,CADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAErB,KAAK,CAACsB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,KAAK,CAACsB,YAAN,GAAqB,EADxB,oBAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKtB,KAAK,CAACuB,YAAX,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIvB,KAAK,CAACwB,QAAV,CAPF,CAFF,CAFF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,SAAS,CAACwB,GAAV,CAAeZ,IAAD,iBACb;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAG,GAAEb,SAAU,GAAEiB,IAAI,CAACa,YAAa,EAA3C;AAA8C,MAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOb,IAAI,CAACc,SAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOd,IAAI,CAACe,IAAZ,CAJF,CADD,CADH,CAfF,EAyBI1B,aAAa,CAAC2B,MAAd,GAAuB,CAAxB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA7B,gBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAzB1D,eA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3B,aAAa,CAACuB,GAAd,CAAmBZ,IAAD,iBAAU,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAjB;AAAqB,MAAA,KAAK,EAAEI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADH,CA1BF,CADF;AAgCD;;AA9DiC;;AAiEpCf,WAAW,CAACgC,SAAZ,GAAwB;AACtB1B,EAAAA,KAAK,EAAEX,SAAS,CAACsC,KAAV,CAAgB;AACrBvB,IAAAA,MAAM,EAAEf,SAAS,CAACsC,KAAV,CAAgB;AACtBtB,MAAAA,EAAE,EAAEhB,SAAS,CAACuC,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALmB,CAAxB;AAQA,eAAenC,WAAf;AAEA,MAAMoC,aAAa,GAAGxC,MAAM,CAACyC,GAAI;AACjC;AACA;AACA,kBAAmB9B,KAAD,IAAWA,KAAK,CAAC+B,QAAS;AAC5C,CAJA;AAMA,MAAMC,YAAY,GAAG3C,MAAM,CAACyC,GAAI;AAChC;AACA;AACA,CAHA;AAKA,MAAMG,IAAI,GAAG5C,MAAM,CAACyC,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,MAAMI,OAAO,GAAG7C,MAAM,CAACyC,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMK,SAAS,GAAG9C,MAAM,CAACyC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMM,MAAM,GAAG/C,MAAM,CAACgD,IAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcrC,KAAD,IAAWA,KAAK,CAACsC,MAAN,GAAe,EAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CApBA","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Movie from './Movie';\n\nconst W154_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/original';\n\nclass MovieDetail extends Component {\n  state = {\n    movie: {},\n    movieCast: [],\n    similarMovies: [],\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    try {\n      const movieFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movieCreditsFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const similarMoviesFetch = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=e223c8dda88d58c4a35436bfed991d9d&language=en-US`);\n      const movie = await movieFetch.json();\n      let movieCast = await movieCreditsFetch.json();\n      movieCast = movieCast.cast.slice(0, 6);\n      let similarMovies = await similarMoviesFetch.json();\n      similarMovies = similarMovies.results.slice(0, 6);\n      this.setState({\n        movie,\n        movieCast,\n        similarMovies,\n      });\n    } catch (error) {\n      // continue\n    }\n  }\n\n  render() {\n    const { movie, movieCast, similarMovies } = this.state;\n    return (\n      <MovieWrapper>\n        <MovieBackdrop backdrop={`${BACKDROP_PATH}${movie.backdrop_path}`} />\n        <MovieInfo>\n          <img src={`${W154_PATH}${movie.poster_path}`} alt=\"\" />\n          <div>\n            <h1>{movie.title}</h1>\n            <Rating rating={movie.vote_average}>\n              {movie.vote_average * 10}\n              % Viewer Rating\n            </Rating>\n            <h3>{movie.release_date}</h3>\n            <p>{movie.overview}</p>\n          </div>\n        </MovieInfo>\n        <h2>Cast</h2>\n        <Cast>\n          {movieCast.map((cast) => (\n            <div key={cast.id}>\n              <img src={`${W154_PATH}${cast.profile_path}`} alt=\"\" />\n              <span>{cast.character}</span>\n              <span>Played by:</span>\n              <span>{cast.name}</span>\n            </div>\n          ))}\n        </Cast>\n        {(similarMovies.length > 0) ? <h2>Related movies</h2> : <h2>No similar movies found</h2>}\n        <Similar>\n          {similarMovies.map((cast) => <Movie key={cast.id} movie={cast} />)}\n        </Similar>\n      </MovieWrapper>\n    );\n  }\n}\n\nMovieDetail.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetail;\n\nconst MovieBackdrop = styled.div`\nwidth: 100vw;\nheight: 50vh;\nbackground: url(${(props) => props.backdrop}) no-repeat top/cover;\n`;\n\nconst MovieWrapper = styled.div`\n  position: relative;\n  \n`;\n\nconst Cast = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: 0 auto;\n  justify-content: space-between;\n  > div {\n    width: 30%;\n    > img {\n      float: left;\n      margin-right: 10px;\n      margin-bottom: 10px;\n    }\n    > span {\n      margin: auto;\n      display: block;\n      text-align: left;\n    }\n  }\n`;\n\nconst Similar = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 80%;\n  margin: 0 auto;\n  justify-content: space-between;\n  > a {\n    width: 30%;\n    margin-bottom: 10px;\n    > img {\n      float: left;\n      margin-right: 10px;\n    }\n    > span {\n      text-align: left;\n    }\n  }\n`;\n\nconst MovieInfo = styled.div`\n  background: #222;\n  text-align: left;\n  padding: 0 10%;\n  display: flex;\n  box-shadow: 0 -15px 15px 0px black;\n  > div {\n    margin-left: 20px;\n  }\n  > img {\n    position: relative;\n    top: -5rem;\n  }\n`;\n\nconst Rating = styled.span`\nposition: relative;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 5px;\n    top: -5px;\n    background: #a00;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    width: ${(props) => props.rating * 10}%;\n    height: 5px;\n    top: -5px;\n    left: 0;\n    background: #2bc400;\n    box-shadow: 0px 0px 5px #2bc400;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}